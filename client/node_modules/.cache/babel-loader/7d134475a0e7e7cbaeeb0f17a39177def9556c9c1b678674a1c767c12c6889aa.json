{"ast":null,"code":"var _jsxFileName = \"/home/rasta/Documents/Test_RR/client/src/components/pages/todolist.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState('');\n  const [token, setToken] = useState('');\n  const [currentUser, setCurrentUser] = useState(null);\n  useEffect(() => {\n    // Fetch user data from server to get the current user ID\n    const fetchCurrentUser = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/users/me', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        setCurrentUser(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchCurrentUser();\n  }, [token]);\n  useEffect(() => {\n    if (currentUser) {\n      // Fetch todos data for the current user from server\n      const fetchTodos = async () => {\n        try {\n          const response = await fetch(`http://localhost:3000/users/${currentUser.id}/todos`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          const data = await response.json();\n          setTodos(data);\n        } catch (error) {\n          console.error(error);\n        }\n      };\n      fetchTodos();\n    }\n  }, [currentUser, token]);\n  const handleAddTodo = async () => {\n    const newId = todos.length > 0 ? todos[todos.length - 1].id + 1 : 1;\n    const newTodoObj = {\n      id: newId,\n      description: newTodo,\n      user: currentUser\n    };\n    try {\n      const response = await fetch(`http://localhost:3000/users/${currentUser.id}/todos`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(newTodoObj)\n      });\n      const data = await response.json();\n      setTodos([...todos, data]);\n      setNewTodo('');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleEditTodo = async (id, newDescription) => {\n    const newTodos = todos.map(todo => todo.id === id ? {\n      ...todo,\n      description: newDescription\n    } : todo);\n    setTodos(newTodos);\n    try {\n      await fetch(`http://localhost:3000/todos/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          description: newDescription\n        })\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleDeleteTodo = async id => {\n    const newTodos = todos.filter(todo => todo.id !== id);\n    setTodos(newTodos);\n    try {\n      await fetch(`http://localhost:3000/todos/${id}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [todo.description, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteTodo(todo.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditTodo(todo.id, prompt('Enter new description', todo.description)),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTodo,\n        onChange: e => setNewTodo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTodo,\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"z3C7q6npov4QoNyuKuUFOL8YlwM=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","TodoList","_s","todos","setTodos","newTodo","setNewTodo","token","setToken","currentUser","setCurrentUser","fetchCurrentUser","response","fetch","headers","Authorization","data","json","error","console","fetchTodos","id","handleAddTodo","newId","length","newTodoObj","description","user","method","body","JSON","stringify","handleEditTodo","newDescription","newTodos","map","todo","handleDeleteTodo","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","prompt","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/rasta/Documents/Test_RR/client/src/components/pages/todolist.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState('');\n  const [token, setToken] = useState('');\n  const [currentUser, setCurrentUser] = useState(null);\n\n  useEffect(() => {\n    // Fetch user data from server to get the current user ID\n    const fetchCurrentUser = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/users/me', {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        const data = await response.json();\n        setCurrentUser(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchCurrentUser();\n  }, [token]);\n\n  useEffect(() => {\n    if (currentUser) {\n      // Fetch todos data for the current user from server\n      const fetchTodos = async () => {\n        try {\n          const response = await fetch(`http://localhost:3000/users/${currentUser.id}/todos`, {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          });\n          const data = await response.json();\n          setTodos(data);\n        } catch (error) {\n          console.error(error);\n        }\n      };\n\n      fetchTodos();\n    }\n  }, [currentUser, token]);\n\n  const handleAddTodo = async () => {\n    const newId = todos.length > 0 ? todos[todos.length - 1].id + 1 : 1;\n    const newTodoObj = { id: newId, description: newTodo, user: currentUser };\n    try {\n      const response = await fetch(`http://localhost:3000/users/${currentUser.id}/todos`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(newTodoObj),\n      });\n      const data = await response.json();\n      setTodos([...todos, data]);\n      setNewTodo('');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleEditTodo = async (id, newDescription) => {\n    const newTodos = todos.map((todo) =>\n      todo.id === id ? { ...todo, description: newDescription } : todo\n    );\n    setTodos(newTodos);\n    try {\n      await fetch(`http://localhost:3000/todos/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify({ description: newDescription }),\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleDeleteTodo = async (id) => {\n    const newTodos = todos.filter((todo) => todo.id !== id);\n    setTodos(newTodos);\n    try {\n      await fetch(`http://localhost:3000/todos/${id}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Todo List</h2>\n      <ul>\n        {todos.map((todo) => (\n          <li key={todo.id}>\n            {todo.description}\n            <button onClick={() => handleDeleteTodo(todo.id)}>Delete</button>\n            <button onClick={() => handleEditTodo(todo.id, prompt('Enter new description', todo.description))}>Edit</button>\n          </li>\n        ))}\n      </ul>\n      <div>\n        <input type=\"text\" value={newTodo} onChange={(e) => setNewTodo(e.target.value)} />\n        <button onClick={handleAddTodo}>Add Todo</button>\n      </div>\n    </div>\n  );\n}\n\nexport default TodoList;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;UAC7DC,OAAO,EAAE;YACPC,aAAa,EAAG,UAASR,KAAM;UACjC;QACF,CAAC,CAAC;QACF,MAAMS,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;QAClCP,cAAc,CAACM,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAEDP,gBAAgB,EAAE;EACpB,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAEXT,SAAS,CAAC,MAAM;IACd,IAAIW,WAAW,EAAE;MACf;MACA,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;QAC7B,IAAI;UACF,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BJ,WAAW,CAACY,EAAG,QAAO,EAAE;YAClFP,OAAO,EAAE;cACPC,aAAa,EAAG,UAASR,KAAM;YACjC;UACF,CAAC,CAAC;UACF,MAAMS,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;UAClCb,QAAQ,CAACY,IAAI,CAAC;QAChB,CAAC,CAAC,OAAOE,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACtB;MACF,CAAC;MAEDE,UAAU,EAAE;IACd;EACF,CAAC,EAAE,CAACX,WAAW,EAAEF,KAAK,CAAC,CAAC;EAExB,MAAMe,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,KAAK,GAAGpB,KAAK,CAACqB,MAAM,GAAG,CAAC,GAAGrB,KAAK,CAACA,KAAK,CAACqB,MAAM,GAAG,CAAC,CAAC,CAACH,EAAE,GAAG,CAAC,GAAG,CAAC;IACnE,MAAMI,UAAU,GAAG;MAAEJ,EAAE,EAAEE,KAAK;MAAEG,WAAW,EAAErB,OAAO;MAAEsB,IAAI,EAAElB;IAAY,CAAC;IACzE,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BJ,WAAW,CAACY,EAAG,QAAO,EAAE;QAClFO,MAAM,EAAE,MAAM;QACdd,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAG,UAASR,KAAM;QACjC,CAAC;QACDsB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,UAAU;MACjC,CAAC,CAAC;MACF,MAAMT,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;MAClCb,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEa,IAAI,CAAC,CAAC;MAC1BV,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,MAAMc,cAAc,GAAG,MAAAA,CAAOX,EAAE,EAAEY,cAAc,KAAK;IACnD,MAAMC,QAAQ,GAAG/B,KAAK,CAACgC,GAAG,CAAEC,IAAI,IAC9BA,IAAI,CAACf,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGe,IAAI;MAAEV,WAAW,EAAEO;IAAe,CAAC,GAAGG,IAAI,CACjE;IACDhC,QAAQ,CAAC8B,QAAQ,CAAC;IAClB,IAAI;MACF,MAAMrB,KAAK,CAAE,+BAA8BQ,EAAG,EAAC,EAAE;QAC/CO,MAAM,EAAE,KAAK;QACbd,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAG,UAASR,KAAM;QACjC,CAAC;QACDsB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEL,WAAW,EAAEO;QAAe,CAAC;MACtD,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOf,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,MAAMmB,gBAAgB,GAAG,MAAOhB,EAAE,IAAK;IACrC,MAAMa,QAAQ,GAAG/B,KAAK,CAACmC,MAAM,CAAEF,IAAI,IAAKA,IAAI,CAACf,EAAE,KAAKA,EAAE,CAAC;IACvDjB,QAAQ,CAAC8B,QAAQ,CAAC;IAClB,IAAI;MACF,MAAMrB,KAAK,CAAE,+BAA8BQ,EAAG,EAAC,EAAE;QAC/CO,MAAM,EAAE,QAAQ;QAChBd,OAAO,EAAE;UACPC,aAAa,EAAG,UAASR,KAAM;QACjC;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACElB,OAAA;IAAAuC,QAAA,gBACEvC,OAAA;MAAAuC,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAClB3C,OAAA;MAAAuC,QAAA,EACGpC,KAAK,CAACgC,GAAG,CAAEC,IAAI,iBACdpC,OAAA;QAAAuC,QAAA,GACGH,IAAI,CAACV,WAAW,eACjB1B,OAAA;UAAQ4C,OAAO,EAAEA,CAAA,KAAMP,gBAAgB,CAACD,IAAI,CAACf,EAAE,CAAE;UAAAkB,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,eACjE3C,OAAA;UAAQ4C,OAAO,EAAEA,CAAA,KAAMZ,cAAc,CAACI,IAAI,CAACf,EAAE,EAAEwB,MAAM,CAAC,uBAAuB,EAAET,IAAI,CAACV,WAAW,CAAC,CAAE;UAAAa,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA,GAHzGP,IAAI,CAACf,EAAE;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAKjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC,eACL3C,OAAA;MAAAuC,QAAA,gBACEvC,OAAA;QAAO8C,IAAI,EAAC,MAAM;QAACC,KAAK,EAAE1C,OAAQ;QAAC2C,QAAQ,EAAGC,CAAC,IAAK3C,UAAU,CAAC2C,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAClF3C,OAAA;QAAQ4C,OAAO,EAAEtB,aAAc;QAAAiB,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC7C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAACzC,EAAA,CAtHQD,QAAQ;AAAAkD,EAAA,GAARlD,QAAQ;AAwHjB,eAAeA,QAAQ;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}