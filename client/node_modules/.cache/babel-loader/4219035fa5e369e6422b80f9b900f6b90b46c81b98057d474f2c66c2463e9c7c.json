{"ast":null,"code":"var _jsxFileName = \"/home/rasta/Documents/Test_RR/client/src/components/pages/todolist.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList(_ref) {\n  _s();\n  let {\n    userId,\n    tokenn\n  } = _ref;\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState('');\n  const [token, setToken] = useState(tokenn);\n  useEffect(() => {\n    // Fetch todos data from server\n    const fetchTodos = async () => {\n      try {\n        const response = await fetch(`http://localhost:3000/todos?userId=${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        setTodos(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchTodos();\n  }, [token, userId]);\n  const handleAddTodo = async () => {\n    const newId = todos.length > 0 ? todos[todos.length - 1].id + 1 : 1;\n    const newTodoObj = {\n      id: newId,\n      description: newTodo,\n      userId,\n      status: 'undone'\n    };\n    try {\n      const response = await fetch('http://localhost:3000/todos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(newTodoObj)\n      });\n      const data = await response.json();\n      setTodos([...todos, data]);\n      setNewTodo('');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleEditTodo = async (id, newDescription) => {\n    const todoToEdit = todos.find(todo => todo.id === id);\n    if (!todoToEdit) {\n      console.error('Todo not found');\n      return;\n    }\n    const newStatus = todoToEdit.status === 'done' ? 'undone' : 'done';\n    const newTodoObj = {\n      ...todoToEdit,\n      description: newDescription,\n      status: newStatus\n    };\n    const newTodos = todos.map(todo => todo.id === id ? newTodoObj : todo);\n    setTodos(newTodos);\n    try {\n      await fetch(`http://localhost:3000/todos/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(newTodoObj)\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleDeleteTodo = async id => {\n    const newTodos = todos.filter(todo => todo.id !== id);\n    setTodos(newTodos);\n    try {\n      await fetch(`http://localhost:3000/todos/${id}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Array.isArray(todos) && todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            textDecoration: todo.done ? 'line-through' : 'none'\n          },\n          children: todo.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteTodo(todo.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditTodo(todo.id, prompt('Enter new description', todo.description)),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            const newTodos = todos.map(t => {\n              if (t.id === todo.id) {\n                return {\n                  ...t,\n                  done: !t.done\n                };\n              }\n              return t;\n            });\n            setTodos(newTodos);\n          },\n          children: todo.done ? 'Undone' : 'Done'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTodo,\n        onChange: e => setNewTodo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTodo,\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"6zL9y9OfxcUA71kX0MeovTEGScM=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","TodoList","_ref","_s","userId","tokenn","todos","setTodos","newTodo","setNewTodo","token","setToken","fetchTodos","response","fetch","headers","Authorization","data","json","error","console","handleAddTodo","newId","length","id","newTodoObj","description","status","method","body","JSON","stringify","handleEditTodo","newDescription","todoToEdit","find","todo","newStatus","newTodos","map","handleDeleteTodo","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","style","textDecoration","done","onClick","prompt","t","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/rasta/Documents/Test_RR/client/src/components/pages/todolist.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction TodoList({ userId, tokenn }) {\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState('');\n  const [token, setToken] = useState(tokenn);\n\n  \n  useEffect(() => {\n    // Fetch todos data from server\n    const fetchTodos = async () => {\n      try {\n        const response = await fetch(`http://localhost:3000/todos?userId=${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        const data = await response.json();\n        setTodos(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchTodos();\n  }, [token, userId]);\n\n\n  const handleAddTodo = async () => {\n    const newId = todos.length > 0 ? todos[todos.length - 1].id + 1 : 1;\n    const newTodoObj = { id: newId, description: newTodo, userId, status: 'undone' };\n\n    \n    try {\n      const response = await fetch('http://localhost:3000/todos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(newTodoObj),\n      });\n      const data = await response.json();\n      setTodos([...todos, data]);\n      setNewTodo('');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  \n  \n  \n  \n\n  \n\n  const handleEditTodo = async (id, newDescription) => {\n    const todoToEdit = todos.find((todo) => todo.id === id);\n    if (!todoToEdit) {\n      console.error('Todo not found');\n      return;\n    }\n    const newStatus = todoToEdit.status === 'done' ? 'undone' : 'done';\n    const newTodoObj = { ...todoToEdit, description: newDescription, status: newStatus };\n    const newTodos = todos.map((todo) => (todo.id === id ? newTodoObj : todo));\n    setTodos(newTodos);\n\n    try {\n      await fetch(`http://localhost:3000/todos/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(newTodoObj),\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  \n\n  const handleDeleteTodo = async (id) => {\n    const newTodos = todos.filter((todo) => todo.id !== id);\n    setTodos(newTodos);\n    try {\n      await fetch(`http://localhost:3000/todos/${id}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n\n  return (\n    <div>\n      <h2>Todo List</h2>\n      <ul>\n        {Array.isArray(todos) && todos.map((todo) => (\n          <li key={todo.id}>\n            <span style={{ textDecoration: todo.done ? 'line-through' : 'none' }}>{todo.description}</span>\n            <button onClick={() => handleDeleteTodo(todo.id)}>Delete</button>\n            <button onClick={() => handleEditTodo(todo.id, prompt('Enter new description', todo.description))}>Edit</button>\n            <button onClick={() => {\n              const newTodos = todos.map((t) => {\n                if (t.id === todo.id) {\n                  return { ...t, done: !t.done };\n                }\n                return t;\n              });\n              setTodos(newTodos);\n            }}>{todo.done ? 'Undone' : 'Done'}</button>\n          </li>\n        ))}\n      </ul>\n      <div>\n        <input type=\"text\" value={newTodo} onChange={(e) => setNewTodo(e.target.value)} />\n        <button onClick={handleAddTodo}>Add Todo</button>\n      </div>\n    </div>\n  );\n\n  \n}\n\nexport default TodoList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}