{"ast":null,"code":"var _jsxFileName = \"/home/rasta/Documents/Test_RR/client/src/components/pages/Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport btoa from 'btoa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLogin = async e => {\n    e.preventDefault();\n    const headers = new Headers();\n    headers.set('Authorization', `Basic ${btoa(`${username}:${password}`)}`);\n    headers.set('Content-Type', 'application/json');\n    const response = await fetch('http://your-server.com/login', {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    if (response.ok) {\n      const accessToken = await response.text();\n      // do something with the access token, such as store it in local storage or redirect to another page\n    } else {\n      alert('Login failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: event => setEmail(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: event => setPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = Login;\n;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Link","btoa","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","handleLogin","e","preventDefault","headers","Headers","set","response","fetch","method","body","JSON","stringify","ok","accessToken","text","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","handleSubmit","htmlFor","type","id","value","email","onChange","event","setEmail","target","to","_c","$RefreshReg$"],"sources":["/home/rasta/Documents/Test_RR/client/src/components/pages/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport btoa from 'btoa';\n\nfunction Login() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n    const headers = new Headers();\n    headers.set('Authorization', `Basic ${btoa(`${username}:${password}`)}`);\n    headers.set('Content-Type', 'application/json');\n\n    const response = await fetch('http://your-server.com/login', {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify({ username, password })\n    });\n\n    if (response.ok) {\n      const accessToken = await response.text();\n      // do something with the access token, such as store it in local storage or redirect to another page\n    } else {\n      alert('Login failed');\n    }\n  };\n  return (\n    <div>\n      <h1>Login</h1>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={email}\n            onChange={(event) => setEmail(event.target.value)}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"password\">Password:</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n        </div>\n        <button type=\"submit\">Submit</button>\n        <Link to=\"/signup\">Sign up</Link>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}