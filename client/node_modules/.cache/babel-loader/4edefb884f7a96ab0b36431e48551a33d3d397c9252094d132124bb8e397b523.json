{"ast":null,"code":"var _jsxFileName = \"/home/rasta/Documents/Test_RR/client/src/components/pages/todolist.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList(_ref) {\n  _s();\n  let {\n    userId\n  } = _ref;\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState('');\n  const [token, setToken] = useState('');\n  useEffect(() => {\n    // Fetch todos data from server\n    const fetchTodos = async () => {\n      try {\n        const response = await fetch(`http://localhost:3000/todos?userId=${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        setTodos(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchTodos();\n  }, [token, userId]);\n  const handleAddTodo = async () => {\n    const newId = todos.length > 0 ? todos[todos.length - 1].id + 1 : 1;\n    const newTodoObj = {\n      id: newId,\n      description: newTodo,\n      userId\n    };\n    try {\n      const response = await fetch('http://localhost:3000/todos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(newTodoObj)\n      });\n      const data = await response.json();\n      setTodos([...todos, data]);\n      setNewTodo('');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleEditTodo = async (id, newDescription) => {\n    console.log('id:', id); // add this to check the value of id\n    const todoToEdit = todos.find(todo => todo.id === id);\n    if (!todoToEdit) {\n      console.error('Todo not found'); // add this to check if the todo was found\n      return;\n    }\n    const newTodos = todos.map(todo => todo.id === id ? {\n      ...todo,\n      description: newDescription\n    } : todo);\n    setTodos(newTodos);\n    try {\n      await fetch(`http://localhost:3000/todos/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          description: newDescription\n        })\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleDeleteTodo = async id => {\n    const newTodos = todos.filter(todo => todo.id !== id);\n    setTodos(newTodos);\n    try {\n      await fetch(`http://localhost:3000/todos/${id}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Array.isArray(todos) && todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [todo.description, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteTodo(todo.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditTodo(todo.id, prompt('Enter new description', todo.description)),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTodo,\n        onChange: e => setNewTodo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTodo,\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"4BKj2CCaxpcBcXyboW/TDmNy/HY=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","TodoList","_ref","_s","userId","todos","setTodos","newTodo","setNewTodo","token","setToken","fetchTodos","response","fetch","headers","Authorization","data","json","error","console","handleAddTodo","newId","length","id","newTodoObj","description","method","body","JSON","stringify","handleEditTodo","newDescription","log","todoToEdit","find","todo","newTodos","map","handleDeleteTodo","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","onClick","prompt","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/rasta/Documents/Test_RR/client/src/components/pages/todolist.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction TodoList({ userId }) {\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState('');\n  const [token, setToken] = useState('');\n\n  useEffect(() => {\n    // Fetch todos data from server\n    const fetchTodos = async () => {\n      try {\n        const response = await fetch(`http://localhost:3000/todos?userId=${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        const data = await response.json();\n        setTodos(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchTodos();\n  }, [token, userId]);\n\n\n  const handleAddTodo = async () => {\n    const newId = todos.length > 0 ? todos[todos.length - 1].id + 1 : 1;\n    const newTodoObj = { id: newId, description: newTodo, userId };\n    \n    try {\n      const response = await fetch('http://localhost:3000/todos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(newTodoObj),\n      });\n      const data = await response.json();\n      setTodos([...todos, data]);\n      setNewTodo('');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  \n  \n  \n  \n\n  \n\n  const handleEditTodo = async (id, newDescription) => {\n    console.log('id:', id); // add this to check the value of id\n    const todoToEdit = todos.find(todo => todo.id === id);\n    if (!todoToEdit) {\n      console.error('Todo not found'); // add this to check if the todo was found\n      return;\n    }\n    const newTodos = todos.map((todo) =>\n      todo.id === id ? { ...todo, description: newDescription } : todo\n    );\n    setTodos(newTodos);\n    try {\n      await fetch(`http://localhost:3000/todos/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify({ description: newDescription }),\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  \n\n  const handleDeleteTodo = async (id) => {\n    const newTodos = todos.filter((todo) => todo.id !== id);\n    setTodos(newTodos);\n    try {\n      await fetch(`http://localhost:3000/todos/${id}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n\n  return (\n    <div>\n      <h2>Todo List</h2>\n      <ul>\n        {Array.isArray(todos) && todos.map((todo) => (\n          <li key={todo.id}>\n            {todo.description}\n            <button onClick={() => handleDeleteTodo(todo.id)}>Delete</button>\n            <button onClick={() => handleEditTodo(todo.id, prompt('Enter new description', todo.description))}>Edit</button>\n          </li>\n        ))}\n      </ul>\n      <div>\n        <input type=\"text\" value={newTodo} onChange={(e) => setNewTodo(e.target.value)} />\n        <button onClick={handleAddTodo}>Add Todo</button>\n      </div>\n    </div>\n  );\n  \n}\n\nexport default TodoList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}