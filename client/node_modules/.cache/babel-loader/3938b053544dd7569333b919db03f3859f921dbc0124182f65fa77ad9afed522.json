{"ast":null,"code":"var _jsxFileName = \"/home/rasta/Documents/Test_RR/client/src/components/pages/todolist.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport '../../sass/todolist.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList(_ref) {\n  _s();\n  let {\n    userId,\n    tokenn\n  } = _ref;\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState('');\n  const [token, setToken] = useState(tokenn);\n  useEffect(() => {\n    // Fetch todos data from server\n    const fetchTodos = async () => {\n      try {\n        const response = await fetch(`http://localhost:3000/todos?userId=${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        setTodos(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchTodos();\n  }, [token, userId]);\n  const handleAddTodo = async () => {\n    const newId = todos.length > 0 ? todos[todos.length - 1].id + 1 : 1;\n    const now = new Date().toISOString(); // get the current time in ISO format\n    const newTodoObj = {\n      id: newId,\n      description: newTodo,\n      userId,\n      status: \"not done yet\",\n      createdAt: now // add the current time to the new todo object\n    };\n\n    try {\n      const response = await fetch('http://localhost:3000/todos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(newTodoObj)\n      });\n      const data = await response.json();\n      setTodos([...todos, data]);\n      setNewTodo('');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleEditTodo = async (id, newDescription, status) => {\n    console.log('id:', id); // add this to check the value of id\n    const todoToEdit = todos.find(todo => todo.id === id);\n    if (!todoToEdit) {\n      console.error('Todo not found'); // add this to check if the todo was found\n      return;\n    }\n    const newTodos = todos.map(todo => todo.id === id ? {\n      ...todo,\n      description: newDescription,\n      status\n    } : todo);\n    setTodos(newTodos);\n    try {\n      await fetch(`http://localhost:3000/todos/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          description: newDescription,\n          status\n        })\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleDeleteTodo = async id => {\n    const newTodos = todos.filter(todo => todo.id !== id);\n    setTodos(newTodos);\n    try {\n      await fetch(`http://localhost:3000/todos/${id}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleToggleTodo = async (id, status) => {\n    const newStatus = status === \"not done yet\" ? \"done\" : \"not done yet\";\n    handleEditTodo(id, todos.find(todo => todo.id === id).description, newStatus);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Array.isArray(todos) && todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [todo.description, /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: todo.status === \"not done yet\" ? \"red\" : \"green\",\n            marginLeft: 10\n          },\n          children: todo.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginLeft: 10\n          },\n          children: [\"Created at: \", new Date(todo.createdAt).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleToggleTodo(todo.id, todo.status),\n          children: \"Change task status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteTodo(todo.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 5\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 3\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTodo,\n        onChange: e => setNewTodo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTodo,\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"6zL9y9OfxcUA71kX0MeovTEGScM=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","TodoList","_ref","_s","userId","tokenn","todos","setTodos","newTodo","setNewTodo","token","setToken","fetchTodos","response","fetch","headers","Authorization","data","json","error","console","handleAddTodo","newId","length","id","now","Date","toISOString","newTodoObj","description","status","createdAt","method","body","JSON","stringify","handleEditTodo","newDescription","log","todoToEdit","find","todo","newTodos","map","handleDeleteTodo","filter","handleToggleTodo","newStatus","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","style","color","marginLeft","toLocaleString","onClick","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/rasta/Documents/Test_RR/client/src/components/pages/todolist.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport '../../sass/todolist.scss';\n\nfunction TodoList({ userId, tokenn }) {\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState('');\n  const [token, setToken] = useState(tokenn);\n\n  \n  useEffect(() => {\n    // Fetch todos data from server\n    const fetchTodos = async () => {\n      try {\n        const response = await fetch(`http://localhost:3000/todos?userId=${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        const data = await response.json();\n        setTodos(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchTodos();\n  }, [token, userId]);\n\n\n  const handleAddTodo = async () => {\n    const newId = todos.length > 0 ? todos[todos.length - 1].id + 1 : 1;\n    const now = new Date().toISOString(); // get the current time in ISO format\n    const newTodoObj = {\n      id: newId,\n      description: newTodo,\n      userId,\n      status: \"not done yet\",\n      createdAt: now, // add the current time to the new todo object\n    };\n  \n    try {\n      const response = await fetch('http://localhost:3000/todos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(newTodoObj),\n      });\n      const data = await response.json();\n      setTodos([...todos, data]);\n      setNewTodo('');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  \n  \n  \n  \n\n  \n\n  const handleEditTodo = async (id, newDescription, status) => {\n    console.log('id:', id); // add this to check the value of id\n    const todoToEdit = todos.find(todo => todo.id === id);\n    if (!todoToEdit) {\n      console.error('Todo not found'); // add this to check if the todo was found\n      return;\n    }\n    const newTodos = todos.map((todo) =>\n      todo.id === id ? { ...todo, description: newDescription, status } : todo\n    );\n    setTodos(newTodos);\n    try {\n      await fetch(`http://localhost:3000/todos/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify({ description: newDescription, status }),\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  \n\n  const handleDeleteTodo = async (id) => {\n    const newTodos = todos.filter((todo) => todo.id !== id);\n    setTodos(newTodos);\n    try {\n      await fetch(`http://localhost:3000/todos/${id}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleToggleTodo = async (id, status) => {\n    const newStatus = status === \"not done yet\" ? \"done\" : \"not done yet\";\n    handleEditTodo(id, todos.find(todo => todo.id === id).description, newStatus);\n  }\n  \n\n  return (\n    <div className=\"todo-list\">\n      <h2>Todo List</h2>\n      <ul>\n      {Array.isArray(todos) && todos.map((todo) => (\n  <li key={todo.id}>\n    {todo.description}\n    <span style={{ color: todo.status === \"not done yet\" ? \"red\" : \"green\", marginLeft: 10 }}>\n      {todo.status}\n    </span>\n    <span style={{ marginLeft: 10 }}>\n      Created at: {new Date(todo.createdAt).toLocaleString()}\n    </span>\n    <button onClick={() => handleToggleTodo(todo.id, todo.status)}>Change task status</button>\n    <button onClick={() => handleDeleteTodo(todo.id)}>Delete</button>\n  </li>\n))}\n\n      </ul>\n      <div>\n        <input\n          type=\"text\"\n          value={newTodo}\n          onChange={(e) => setNewTodo(e.target.value)}\n        />\n        <button onClick={handleAddTodo}>Add Todo</button>\n      </div>\n    </div>\n  );\n  \n\n\n\n\n\n\n}\n\nexport default TodoList;\n      \n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}