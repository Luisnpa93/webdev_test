{"ast":null,"code":"var _jsxFileName = \"/home/rasta/Documents/Test_RR/client/src/components/pages/Login.tsx\",\n  _s = $RefreshSig$();\nimport { Link } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    const encodedInfo = btoa(`${email}:${password}`);\n    const headers = new Headers();\n    headers.set('Authorization', `Basic ${encodedInfo}`);\n    headers.set('Content-Type', 'application/json');\n    const response = await fetch('http://localhost:3000/auth/login', {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    console.log(response);\n    if (response.ok) {\n      const data = await response.json();\n      const {\n        accessToken\n      } = data;\n      localStorage.setItem('accessToken', accessToken);\n\n      // Send request to get user data\n      const userDataResponse = await fetch('http://localhost:3000/users/data', {\n        headers: {\n          'Authorization': `Bearer ${accessToken}`\n        }\n      });\n      if (userDataResponse.ok) {\n        const userData = await userDataResponse.json();\n        const {\n          email,\n          age\n        } = userData;\n        navigate('/userpage', {\n          state: {\n            email,\n            age\n          }\n        });\n      } else {\n        alert('Failed to retrieve user data');\n      }\n    } else {\n      alert('Login failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: event => setEmail(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: event => setPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"OqFWRqNCJ3BNGyYdED5qKBGtbCw=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\n;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Link","useNavigate","React","useState","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","navigate","handleLogin","e","preventDefault","encodedInfo","btoa","headers","Headers","set","response","fetch","method","body","JSON","stringify","console","log","ok","data","json","accessToken","localStorage","setItem","userDataResponse","userData","age","state","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","event","target","to","_c","$RefreshReg$"],"sources":["/home/rasta/Documents/Test_RR/client/src/components/pages/Login.tsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport React, { useState } from 'react';\n\nfunction Login() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = async (e) => {\n    e.preventDefault();\n  \n    const encodedInfo = btoa(`${email}:${password}`);\n    \n    const headers = new Headers();\n    headers.set('Authorization', `Basic ${encodedInfo}`);\n    headers.set('Content-Type', 'application/json');\n  \n    const response = await fetch('http://localhost:3000/auth/login', {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify({ email, password })\n    });\n  \n    console.log(response);\n    if (response.ok) {\n      const data = await response.json();\n      const { accessToken } = data;\n      localStorage.setItem('accessToken', accessToken);\n  \n      // Send request to get user data\n      const userDataResponse = await fetch('http://localhost:3000/users/data', {\n        headers: { 'Authorization': `Bearer ${accessToken}` }\n      });\n  \n      if (userDataResponse.ok) {\n        const userData = await userDataResponse.json();\n        const { email, age } = userData;\n        navigate('/userpage', { state: { email, age } });\n      } else {\n        alert('Failed to retrieve user data');\n      }\n    } else {\n      alert('Login failed');\n    }\n  };\n  \n\n  return (\n    <div>\n      <h1>Login</h1>\n      <form onSubmit={handleLogin}>\n        <div>\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={email}\n            onChange={(event) => setEmail(event.target.value)}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"password\">Password:</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n        </div>\n        <button type=\"submit\">Submit</button>\n        <Link to=\"/signup\">Sign up</Link>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}