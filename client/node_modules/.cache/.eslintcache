[{"/home/rasta/Documents/Test_RR/client/src/index.js":"1","/home/rasta/Documents/Test_RR/client/src/App.tsx":"2","/home/rasta/Documents/Test_RR/client/src/reportWebVitals.js":"3","/home/rasta/Documents/Test_RR/client/src/context/user.context.tsx":"4","/home/rasta/Documents/Test_RR/client/src/components/pages/Home.tsx":"5","/home/rasta/Documents/Test_RR/client/src/components/pages/OptionB.tsx":"6","/home/rasta/Documents/Test_RR/client/src/components/pages/Login.tsx":"7","/home/rasta/Documents/Test_RR/client/src/components/pages/OptionA.tsx":"8","/home/rasta/Documents/Test_RR/client/src/components/pages/NavBar.tsx":"9","/home/rasta/Documents/Test_RR/client/src/components/pages/Signup.tsx":"10","/home/rasta/Documents/Test_RR/client/src/components/pages/todolist.tsx":"11"},{"size":541,"mtime":1679396993359,"results":"12","hashOfConfig":"13"},{"size":2004,"mtime":1679399393655,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1678208926958,"results":"15","hashOfConfig":"13"},{"size":116,"mtime":1679336809854,"results":"16","hashOfConfig":"13"},{"size":2460,"mtime":1679399830428,"results":"17","hashOfConfig":"13"},{"size":186,"mtime":1678209222179,"results":"18","hashOfConfig":"13"},{"size":3405,"mtime":1679397728775,"results":"19","hashOfConfig":"13"},{"size":186,"mtime":1678209216671,"results":"20","hashOfConfig":"13"},{"size":1588,"mtime":1679409703561,"results":"21","hashOfConfig":"13"},{"size":2232,"mtime":1679391545266,"results":"22","hashOfConfig":"13"},{"size":6532,"mtime":1679397629889,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"owt2xv",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/rasta/Documents/Test_RR/client/src/index.js",[],[],[],"/home/rasta/Documents/Test_RR/client/src/App.tsx",["62"],[],"import React, { createContext, useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport NavBar from './components/pages/NavBar';\nimport Home from './components/pages/Home';\nimport OptionA from './components/pages/OptionA';\nimport OptionB from './components/pages/OptionB';\nimport Login from './components/pages/Login';\nimport Signup from './components/pages/Signup';\nimport './sass/main.scss';\nimport axios from 'axios';\nimport { UserContext } from './context/user.context';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nconst queryClient = new QueryClient();\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    axios.interceptors.request.use(\n      async (config) => {\n        const token = localStorage.getItem('accessToken');\n        if (token) {\n          config.headers['Authorization'] = `Bearer ${token}`;\n        }\n        return config;\n      },\n      (error) => {\n        return Promise.reject(error);\n      }\n    );\n\n    console.log('User is', user);\n  }, [user]);\n\n  return (\n    <UserContext.Provider value={{ user, setUser }}>\n      <QueryClientProvider client={queryClient}>\n        <Router>\n          {user ? (\n            <div>\n              {<NavBar />}\n              <Routes key=\"loggedIn\">\n                <Route index element={<Home />} />\n                <Route path=\"/option-a\" element={<OptionA />} />\n                <Route path=\"/option-b\" element={<OptionB />} />\n                <Route path=\"/signup\" element={<Signup />} />\n                \n              </Routes>\n            </div>\n          ) : (\n            <Routes key=\"loggedOut\">\n              <Route index element={<Login />} />\n              <Route path=\"/login\" element={<Login />} />\n              <Route path=\"/signup\" element={<Signup />} />\n              \n            </Routes>\n          )}\n        </Router>\n      </QueryClientProvider>\n    </UserContext.Provider>\n  );\n};\n\nexport default App;\n",[],"/home/rasta/Documents/Test_RR/client/src/reportWebVitals.js",[],[],"/home/rasta/Documents/Test_RR/client/src/context/user.context.tsx",["63"],[],"import React, { createContext} from 'react';\n\nexport const UserContext = createContext( {user: null, setUser: null})","/home/rasta/Documents/Test_RR/client/src/components/pages/Home.tsx",["64","65","66","67","68","69"],[],"import React, { useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useQuery } from 'react-query';\nimport Signup from './Signup';\nimport TodoList from './todolist';\nimport { UserContext } from '../../context/user.context';\n\nconst HomePage = () => {\n  const navigate = useNavigate();\n  const { user, setUser } = useContext(UserContext);\n\n  const { isLoading, data: message } = useQuery('homePageMessage', async () => {\n    const result = await axios.get('http://localhost:3000/');\n    return result.data.message;\n  });\n\n  useEffect(() => {\n    const token = localStorage.getItem('accessToken');\n\n    if (!token) {\n      navigate('/login');\n      return;\n    }\n\n    const getUserData = async () => {\n      const headers = { Authorization: `Bearer ${token}` };\n      const userDataResponse = await fetch('http://localhost:3000/users/data', { headers });\n\n      if (userDataResponse.ok) {\n        const userData = await userDataResponse.json();\n        setUser(userData);\n      } else {\n        localStorage.removeItem('accessToken');\n        navigate('/login');\n      }\n    };\n\n    getUserData();\n  }, [navigate, setUser]);\n\n  const handleLogout = () => {\n    localStorage.removeItem('accessToken');\n    navigate('/login');\n  };\n\n  return (\n    <div style={{ backgroundColor: 'gray' }}>\n      \n      <h1 style={{ textAlign: 'center' }}>Home Page</h1>\n      {user ? (\n        <>\n          <h2>Hello {user.name}, {user.age} years old!</h2>\n          {<TodoList />}\n        </>\n      ) : null}\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        <img src=\"/images/img.png\" alt=\"Amazing Image\" style={{ width: '100%', height: 'auto', display: 'block', margin: '0 auto' }} />\n        <div style={{ textAlign: 'center', margin: '20px 0', fontSize: '1.5em', fontWeight: 'bold' }}>Designed by: me</div>\n      </div>\n      <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', height: '20%', lineHeight: '1.5', marginTop: '2px' }}>\n        <div style={{ textAlign: 'center' }}>\n          <h2>Support</h2>\n          <p>Need help? Contact our support team at support@yourcompany.com</p>\n        </div>\n        <div style={{ textAlign: 'center' }}>\n          <h2>Email</h2>\n          <p>Send us an email at info@yourcompany.com</p>\n        </div>\n      </div>\n    </div>\n  );\n\n};\n\nexport default HomePage;\n","/home/rasta/Documents/Test_RR/client/src/components/pages/OptionB.tsx",[],[],"/home/rasta/Documents/Test_RR/client/src/components/pages/Login.tsx",[],[],"/home/rasta/Documents/Test_RR/client/src/components/pages/OptionA.tsx",[],[],"/home/rasta/Documents/Test_RR/client/src/components/pages/NavBar.tsx",[],[],"/home/rasta/Documents/Test_RR/client/src/components/pages/Signup.tsx",[],[],"/home/rasta/Documents/Test_RR/client/src/components/pages/todolist.tsx",[],[],{"ruleId":"70","severity":1,"message":"71","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":30},{"ruleId":"70","severity":1,"message":"74","line":1,"column":8,"nodeType":"72","messageId":"73","endLine":1,"endColumn":13},{"ruleId":"70","severity":1,"message":"75","line":3,"column":10,"nodeType":"72","messageId":"73","endLine":3,"endColumn":14},{"ruleId":"70","severity":1,"message":"76","line":5,"column":8,"nodeType":"72","messageId":"73","endLine":5,"endColumn":14},{"ruleId":"70","severity":1,"message":"77","line":13,"column":11,"nodeType":"72","messageId":"73","endLine":13,"endColumn":20},{"ruleId":"70","severity":1,"message":"78","line":13,"column":28,"nodeType":"72","messageId":"73","endLine":13,"endColumn":35},{"ruleId":"70","severity":1,"message":"79","line":42,"column":9,"nodeType":"72","messageId":"73","endLine":42,"endColumn":21},{"ruleId":"80","severity":1,"message":"81","line":58,"column":9,"nodeType":"82","endLine":58,"endColumn":136},"@typescript-eslint/no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","'React' is defined but never used.","'Link' is defined but never used.","'Signup' is defined but never used.","'isLoading' is assigned a value but never used.","'message' is assigned a value but never used.","'handleLogout' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement"]