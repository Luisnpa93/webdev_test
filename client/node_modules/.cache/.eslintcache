[{"/home/rasta/Documents/Test_RR/client/src/index.js":"1","/home/rasta/Documents/Test_RR/client/src/reportWebVitals.js":"2","/home/rasta/Documents/Test_RR/client/src/App.tsx":"3","/home/rasta/Documents/Test_RR/client/src/components/pages/OptionB.tsx":"4","/home/rasta/Documents/Test_RR/client/src/components/pages/OptionA.tsx":"5","/home/rasta/Documents/Test_RR/client/src/components/pages/NavBar.tsx":"6","/home/rasta/Documents/Test_RR/client/src/components/pages/Home.tsx":"7","/home/rasta/Documents/Test_RR/client/src/components/pages/Login.tsx":"8","/home/rasta/Documents/Test_RR/client/src/components/pages/Signup.tsx":"9","/home/rasta/Documents/Test_RR/client/src/components/pages/EmptyPage.tsx":"10"},{"size":539,"mtime":1678210598993,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1678208926958,"results":"13","hashOfConfig":"12"},{"size":977,"mtime":1678301777551,"results":"14","hashOfConfig":"12"},{"size":186,"mtime":1678209222179,"results":"15","hashOfConfig":"12"},{"size":186,"mtime":1678209216671,"results":"16","hashOfConfig":"12"},{"size":1313,"mtime":1678212338569,"results":"17","hashOfConfig":"12"},{"size":488,"mtime":1678210485629,"results":"18","hashOfConfig":"12"},{"size":1628,"mtime":1678303595913,"results":"19","hashOfConfig":"12"},{"size":1352,"mtime":1678297655785,"results":"20","hashOfConfig":"12"},{"size":165,"mtime":1678301765067,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"wtkln7",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/rasta/Documents/Test_RR/client/src/index.js",[],[],[],"/home/rasta/Documents/Test_RR/client/src/reportWebVitals.js",[],[],"/home/rasta/Documents/Test_RR/client/src/App.tsx",[],[],[],"/home/rasta/Documents/Test_RR/client/src/components/pages/OptionB.tsx",[],[],"/home/rasta/Documents/Test_RR/client/src/components/pages/OptionA.tsx",[],[],"/home/rasta/Documents/Test_RR/client/src/components/pages/NavBar.tsx",[],[],"/home/rasta/Documents/Test_RR/client/src/components/pages/Home.tsx",[],[],"/home/rasta/Documents/Test_RR/client/src/components/pages/Login.tsx",["55"],[],"import { Link } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport React, { useState } from 'react';\n\nfunction Login() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n    const encodedInfo = btoa(`${email}:${password}`);\n    \n    const headers = new Headers();\n    headers.set('Authorization', `Basic ${encodedInfo}`);\n    headers.set('Content-Type', 'application/json');\n\n    const response = await fetch('http://localhost:3000/auth/login', {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify({ email, password })\n    });\n\n    console.log(response);\n    if (response.ok) {\n      const accessToken = await response.text();\n      navigate('/empty-page')\n    } else {\n      alert('Login failed');\n    }\n  };\n\n  return (\n    <div>\n      <h1>Login</h1>\n      <form onSubmit={handleLogin}>\n        <div>\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={email}\n            onChange={(event) => setEmail(event.target.value)}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"password\">Password:</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n        </div>\n        <button type=\"submit\">Submit</button>\n        <Link to=\"/signup\">Sign up</Link>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","/home/rasta/Documents/Test_RR/client/src/components/pages/Signup.tsx",[],[],"/home/rasta/Documents/Test_RR/client/src/components/pages/EmptyPage.tsx",[],[],{"ruleId":"56","severity":1,"message":"57","line":27,"column":13,"nodeType":"58","messageId":"59","endLine":27,"endColumn":24},"@typescript-eslint/no-unused-vars","'accessToken' is assigned a value but never used.","Identifier","unusedVar"]