[{"/home/rasta/Documents/Test_RR/client/src/index.js":"1","/home/rasta/Documents/Test_RR/client/src/reportWebVitals.js":"2","/home/rasta/Documents/Test_RR/client/src/App.tsx":"3","/home/rasta/Documents/Test_RR/client/src/components/pages/OptionB.tsx":"4","/home/rasta/Documents/Test_RR/client/src/components/pages/OptionA.tsx":"5","/home/rasta/Documents/Test_RR/client/src/components/pages/NavBar.tsx":"6","/home/rasta/Documents/Test_RR/client/src/components/pages/Home.tsx":"7","/home/rasta/Documents/Test_RR/client/src/components/pages/Login.tsx":"8","/home/rasta/Documents/Test_RR/client/src/components/pages/Signup.tsx":"9","/home/rasta/Documents/Test_RR/client/src/components/pages/Userpage.tsx":"10","/home/rasta/Documents/Test_RR/client/src/components/pages/todolist.tsx":"11"},{"size":539,"mtime":1678210598993,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1678208926958,"results":"14","hashOfConfig":"13"},{"size":1006,"mtime":1678994534223,"results":"15","hashOfConfig":"13"},{"size":186,"mtime":1678209222179,"results":"16","hashOfConfig":"13"},{"size":186,"mtime":1678209216671,"results":"17","hashOfConfig":"13"},{"size":1343,"mtime":1679079577387,"results":"18","hashOfConfig":"13"},{"size":1291,"mtime":1679158381123,"results":"19","hashOfConfig":"13"},{"size":3066,"mtime":1679079508276,"results":"20","hashOfConfig":"13"},{"size":2051,"mtime":1679177131403,"results":"21","hashOfConfig":"13"},{"size":1621,"mtime":1679176245180,"results":"22","hashOfConfig":"13"},{"size":3842,"mtime":1679320058571,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"wtkln7",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/rasta/Documents/Test_RR/client/src/index.js",[],[],[],"/home/rasta/Documents/Test_RR/client/src/reportWebVitals.js",[],[],"/home/rasta/Documents/Test_RR/client/src/App.tsx",["61"],[],"/home/rasta/Documents/Test_RR/client/src/components/pages/OptionB.tsx",[],[],[],"/home/rasta/Documents/Test_RR/client/src/components/pages/OptionA.tsx",[],[],"/home/rasta/Documents/Test_RR/client/src/components/pages/NavBar.tsx",[],[],"/home/rasta/Documents/Test_RR/client/src/components/pages/Home.tsx",["62","63"],[],"/home/rasta/Documents/Test_RR/client/src/components/pages/Login.tsx",[],[],"/home/rasta/Documents/Test_RR/client/src/components/pages/Signup.tsx",[],[],"/home/rasta/Documents/Test_RR/client/src/components/pages/Userpage.tsx",["64","65"],[],"import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Signup from './Signup';\nimport TodoList from './todolist';\n\nfunction Userpage() {\n  const navigate = useNavigate();\n  const [userData, setUserData] = useState(null);\n  const [showList, setShowList] = useState(false);\n  const [token, setToken] = useState('');\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch('http://localhost:3000/users/data', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('accessToken')}`,\n          },\n        });\n\n        if (!response.ok) {\n          throw new Error('Invalid token');\n        }\n\n        const data = await response.json();\n        console.log('User data:', data);\n        setUserData(data);\n        setToken(localStorage.getItem('accessToken'));\n      } catch (error) {\n        console.error(error);\n        navigate('/login');\n      }\n    }\n    fetchData();\n  }, []);\n\n  const handleLogout = () => {\n    // Implement logout logic here, e.g. delete the token and redirect to login page\n    localStorage.removeItem('accessToken');\n    navigate('/login')\n  };\n\n  const handleMyList = () => {\n    setShowList(true); \n  };\n\n  return (\n    <div>\n      {userData && (\n        <>\n          <h1>Hello {userData.name}, {userData.age} years old!</h1>\n          <button onClick={handleLogout}>Logout</button>\n          <button onClick={handleMyList}>My List</button>\n          {showList && <TodoList userId={userData.id} tokenn={token} />}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Userpage;\n",[],"/home/rasta/Documents/Test_RR/client/src/components/pages/todolist.tsx",["66"],[],{"ruleId":"67","severity":1,"message":"68","line":11,"column":10,"nodeType":"69","messageId":"70","endLine":11,"endColumn":18},{"ruleId":"67","severity":1,"message":"71","line":5,"column":10,"nodeType":"69","messageId":"70","endLine":5,"endColumn":17},{"ruleId":"72","severity":1,"message":"73","line":20,"column":5,"nodeType":"74","endLine":20,"endColumn":132},{"ruleId":"67","severity":1,"message":"75","line":3,"column":8,"nodeType":"69","messageId":"70","endLine":3,"endColumn":14},{"ruleId":"76","severity":1,"message":"77","line":35,"column":6,"nodeType":"78","endLine":35,"endColumn":8,"suggestions":"79"},{"ruleId":"67","severity":1,"message":"80","line":7,"column":17,"nodeType":"69","messageId":"70","endLine":7,"endColumn":25},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'message' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Signup' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["81"],"'setToken' is assigned a value but never used.",{"desc":"82","fix":"83"},"Update the dependencies array to be: [navigate]",{"range":"84","text":"85"},[991,993],"[navigate]"]